Workflow
=====

Running **JUNE_NZ** involves three main steps:

- Step 1: Creating the input dataset.
- Step 2: Running the model.
- Step 3: Generating the model diagnosis.

Each step utilizes the output generated by the previous step as input.

Note that the **JUNE_NZ** environment must be enabled when running the worklfow (e.g., ``conda activate june_nz``), and we may also need to specify the ``PYTHONPATH`` accordingly (e.g., ``export PYTHONPATH=/home/zhangs/Github/June_NZ``).

**********
Step 1. Creating the input dataset
**********

The wrapper for creating the input dataset is ``cli/cli_data.py``, which can be triggered as:

.. code-block:: python

    python cli_data.py --workdir <WORKING DIRECTORY>
                       --cfg <DATA CREATION CONFIGURATION>
                       [--scale <POPULATION PERCENTAGE>]
                       [--disease_cfg_dir <DISEASE CONFIGURATION DIRECTORY>]
                       [--policy_cfg_path <POLICY CONFIGURATION FILE>]
                       [--vaccine_cfg_path <VACCINATION CAMPAIGN CONFIGURATION FILE>]
                       [--simulation_cfg_path <SIMULATION CONFIGURATION FILE>]
                       [--use_sa3_as_super_area]

where:

    - ``--workdir``: Working directory.
    - ``--cfg``: Data configuration.
    - ``--scale``: Population percentage to be used in the model (e.g., 0.1 means that we only use 10% of NZ population).
    - ``--disease_cfg_dir``: Disease configuration directory, which must contain population comorbidities, infection probability, infection outcome, symptom trajectory and virus intensity.
    - ``--policy_cfg_path``: Policy configuration file.
    - ``--vaccine_cfg_path``: Vaccine compaign configuration file.
    - ``--simulation_cfg_path``: Simulation configuration file.
    - ``--use_sa3_as_super_area``: If using SA3 as super area, otherwise use the regional councils.

For example, the input data can be created by ``python cli_data.py --workdir etc/data/realworld_auckland --cfg etc/cfg/run/june_data.yml --scale 0.1 --disease_cfg_dir etc/cfg/disease/covid-19 --policy_cfg_path etc/cfg/policy/policy1.yaml --vaccine_cfg_path etc/cfg/disease/vaccine/vaccine1.yaml --simulation_cfg_path etc/cfg/simulation/simulation_cfg.yml --use_sa3_as_super_area``.


**********
Step 2. Running the model
**********
The model can be run using ``cli/cli_june.py``, which can be triggered as:

.. code-block:: python

    python cli_june.py --workdir <WORKING DIRECTORY>
                       --cfg <MODEL CONFIGURATION>
                       [--tuning_cfg <TUNING CONFIGURATION>]


where:

    - ``--workdir``: Working directory.
    - ``--cfg``: Model running configuration.
    - ``--tuning_cfg``: Model tuning configuration [Default: None]. If not set then no tuning will be done from the input data.

For example, the model diagnosis can be created by: ``python cli_june.py --workdir /tmp/june_realworld_auckland_base --cfg etc/cfg/run/june_nz2.yml``.


**********
Step 3. Generating the model diagnosis
**********

The wrapper for creating the model output diagnosis is ``cli/cli_diags.py``, which can be triggered as:

.. code-block:: python

    python cli_diags.py --workdir <WORKING DIRECTORY>
                        --cfg <JUNE MODEL DIAGNOSIS CONFIGURATION PATH>
                        --june_data_dir <JUNE MODEL OUTPUT DIRECTORY>


where:

    - ``--workdir``: Working directory.
    - ``--cfg``: Model diagnosis configuration.
    - ``--june_data_dir``: June model output directory


For example, the model diagnosis can be created by ``python cli_diags.py --workdir etc/data/june_realworld_auckland_base_diag --cfg etc/cfg/run/june_diags.yml --june_data_dir /tmp/june_realworld_auckland_base/output``.